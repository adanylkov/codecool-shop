// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20221206094306_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DefaultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "USD",
                            DefaultPrice = 49.9m,
                            Description = "Fantastic price. Large content ecosystem. Good parental controls. Helpful technical support.",
                            Name = "Amazon Fire",
                            ProductCategoryId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            Currency = "USD",
                            DefaultPrice = 479.0m,
                            Description = "Keyboard cover is included. Fanless Core m5 processor. Full-size USB ports. Adjustable kickstand.",
                            Name = "Lenovo IdeaPad Miix 700",
                            ProductCategoryId = 1,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 3,
                            Currency = "USD",
                            DefaultPrice = 89.0m,
                            Description = "Amazon's latest Fire HD 8 tablet is a great value for media consumption.",
                            Name = "Amazon Fire HD 8",
                            ProductCategoryId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 4,
                            Currency = "USD",
                            DefaultPrice = 650.0m,
                            Description = "Bristling with high-refresh rate displays and competitive GPUs, ultra-durable TUF Gaming laptop deliver a reliable portable gaming experience to a wide audience of gamers.",
                            Name = "ASUS TUF Gaming",
                            ProductCategoryId = 2,
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 5,
                            Currency = "USD",
                            DefaultPrice = 510.0m,
                            Description = "The Nvidia GeForce RTX 3070 is a fast desktop graphics card based on the Ampere architecture",
                            Name = "Geforce RTX 3070",
                            ProductCategoryId = 3,
                            SupplierId = 6
                        },
                        new
                        {
                            Id = 6,
                            Currency = "USD",
                            DefaultPrice = 610.0m,
                            Description = "Samsung Galaxy S22, the most affordable device in the company's 2022 flagship series, has flown under the radar",
                            Name = "Samsung Galaxy S22",
                            ProductCategoryId = 4,
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 7,
                            Currency = "USD",
                            DefaultPrice = 1115.0m,
                            Description = "Iphone 14 has A15 Bionic, with a 5‑core GPU, powers all the latest features and makes graphically intense games and AR apps feel ultrafluid.",
                            Name = "Iphone 14",
                            ProductCategoryId = 4,
                            SupplierId = 5
                        },
                        new
                        {
                            Id = 8,
                            Currency = "USD",
                            DefaultPrice = 999.0m,
                            Description = "The ASUS ROG Phone 6 is an Android gaming smartphone made by Asus",
                            Name = "ASUS ROG Phone 6",
                            ProductCategoryId = 4,
                            SupplierId = 3
                        });
                });

            modelBuilder.Entity("Domain.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "Hardware",
                            Description = "A tablet computer, commonly shortened to tablet, is a thin, flat mobile computer with a touchscreen display.",
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = 2,
                            Department = "Hardware",
                            Description = "A laptop computer is a battery- or AC-powered personal computer",
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Hardware",
                            Description = "A Graphics card is an expansion card which generates a feed of output images to a display device, such as a computer monitor.",
                            Name = "Graphics card"
                        },
                        new
                        {
                            Id = 4,
                            Department = "Hardware",
                            Description = "a telephone with access to a cellular radio system so it can be used over a wide area, without a physical connection to a network.",
                            Name = "Mobile Phone"
                        });
                });

            modelBuilder.Entity("Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Digital content and services",
                            Name = "Amazon"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Computers",
                            Name = "Lenovo"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Computers",
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Mobile Phones",
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Mobile Phones and Computers",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Graphics card ",
                            Name = "GeForce"
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.HasOne("Domain.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Domain.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
